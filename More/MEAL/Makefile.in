# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

###########################################################################
#
# Rules for making intermediate header file installation
#
###########################################################################


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = test_copy$(EXEEXT) test_Axis$(EXEEXT) test_Projection$(EXEEXT) \
	test_Composite$(EXEEXT) test_get_imap$(EXEEXT) \
	test_BasisRule$(EXEEXT) test_Scalar$(EXEEXT) \
	test_Complex2Product$(EXEEXT) test_Polar$(EXEEXT) \
	test_Rotation$(EXEEXT) test_Invariant$(EXEEXT) \
	test_CyclicParameter$(EXEEXT) test_Univariate$(EXEEXT) \
	test_StokesError$(EXEEXT) test_StokesCovariance$(EXEEXT) \
	test_Vectorize$(EXEEXT) test_UnitTangent$(EXEEXT) \
	test_ComplexCorrelation$(EXEEXT) test_Spinor$(EXEEXT) \
	test_CrossCoherency$(EXEEXT) test_JonesMueller$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_1) test_Function_load$(EXEEXT)
subdir = More/MEAL
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/ac_python_devel.m4 \
	$(top_srcdir)/config/acx_pthread.m4 \
	$(top_srcdir)/config/best_partial_specialization.m4 \
	$(top_srcdir)/config/bnv_have_qt.m4 \
	$(top_srcdir)/config/cfitsio.m4 \
	$(top_srcdir)/config/compiler.m4 \
	$(top_srcdir)/config/complex_template.m4 \
	$(top_srcdir)/config/crypto.m4 $(top_srcdir)/config/cula.m4 \
	$(top_srcdir)/config/cxxf77.m4 $(top_srcdir)/config/debug.m4 \
	$(top_srcdir)/config/default_partial_specialization.m4 \
	$(top_srcdir)/config/download.m4 \
	$(top_srcdir)/config/etr_socket_nsl.m4 \
	$(top_srcdir)/config/f77.m4 $(top_srcdir)/config/fftw.m4 \
	$(top_srcdir)/config/find.m4 \
	$(top_srcdir)/config/getopt_long.m4 \
	$(top_srcdir)/config/gsl.m4 $(top_srcdir)/config/healpix.m4 \
	$(top_srcdir)/config/ipp.m4 $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/libxml.m4 $(top_srcdir)/config/limits.m4 \
	$(top_srcdir)/config/local.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mkl.m4 $(top_srcdir)/config/mpi.m4 \
	$(top_srcdir)/config/optimize.m4 \
	$(top_srcdir)/config/package.m4 $(top_srcdir)/config/pgplot.m4 \
	$(top_srcdir)/config/psrcat.m4 $(top_srcdir)/config/psrxml.m4 \
	$(top_srcdir)/config/puma.m4 $(top_srcdir)/config/qtdriv.m4 \
	$(top_srcdir)/config/readline.m4 \
	$(top_srcdir)/config/tempo2.m4 $(top_srcdir)/config/x11.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(nobase_include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libMEAL_la_LIBADD =
am_libMEAL_la_OBJECTS = Argument.lo ArgumentPolicy.lo besrat.lo \
	vkappa.lo BinaryScalar.lo Boost.lo Boost1.lo BoostUnion.lo \
	Coherency.lo Complex.lo ComplexCartesian.lo \
	ComplexCorrelation.lo ComplexRVM.lo Complex2.lo \
	Complex2Constant.lo Complex2Math.lo Complex4.lo Composite.lo \
	CongruenceTransformation.lo CrossCoherency.lo \
	CyclicParameter.lo Depolarizer.lo ForwardChanged.lo \
	Function.lo Function_factory.lo Function_load.lo \
	Function_parse.lo Function_print.lo FunctionInterface.lo \
	FunctionPolicy.lo Gaussian.lo GimbalLockMonitor.lo \
	Invariant.lo JonesCloude.lo JonesMueller.lo JonesSpinor.lo \
	LeastSquares.lo ModeCoherency.lo MuellerTransformation.lo \
	NormalizeStokes.lo Null.lo OneParameter.lo OrthogonalModes.lo \
	ParameterPolicy.lo ParameterTracer.lo Parameters.lo \
	PhaseGradients.lo PhysicalCoherency.lo Polar.lo Polynomial.lo \
	PositionAngles.lo PowerLaw.lo Projection.lo RandomPolar.lo \
	Real4.lo RotatingVectorModel.lo Rotation.lo Rotation1.lo \
	Scalar.lo ScalarAbsolute.lo ScalarArgument.lo \
	ScalarConstant.lo ScalarCosine.lo ScalarErrorFunction.lo \
	ScalarExponential.lo ScalarHypCosine.lo ScalarHypSine.lo \
	ScalarHypTangent.lo ScalarInverseHypTangent.lo \
	ScalarInverseTangent.lo ScalarInverseTangent2.lo \
	ScalarLogarithm.lo ScalarLogistic.lo ScalarMath.lo \
	ScalarParameter.lo ScalarPower.lo ScalarRoot.lo ScalarSine.lo \
	ScalarTangent.lo ScalarVector.lo ScaledVonMises.lo \
	ScaledVonMisesDeriv.lo SingularCoherency.lo Spinor.lo \
	SpinorJones.lo Steps.lo StokesCovariance.lo StokesError.lo \
	Tracer.lo UnaryScalar.lo Union.lo UnitTangent.lo \
	UnivariatePolicy.lo VelocityModel.lo
libMEAL_la_OBJECTS = $(am_libMEAL_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am__EXEEXT_1 = test_copy$(EXEEXT) test_Axis$(EXEEXT) \
	test_Projection$(EXEEXT) test_Composite$(EXEEXT) \
	test_get_imap$(EXEEXT) test_BasisRule$(EXEEXT) \
	test_Scalar$(EXEEXT) test_Complex2Product$(EXEEXT) \
	test_Polar$(EXEEXT) test_Rotation$(EXEEXT) \
	test_Invariant$(EXEEXT) test_CyclicParameter$(EXEEXT) \
	test_Univariate$(EXEEXT) test_StokesError$(EXEEXT) \
	test_StokesCovariance$(EXEEXT) test_Vectorize$(EXEEXT) \
	test_UnitTangent$(EXEEXT) test_ComplexCorrelation$(EXEEXT) \
	test_Spinor$(EXEEXT) test_CrossCoherency$(EXEEXT) \
	test_JonesMueller$(EXEEXT)
am_test_Axis_OBJECTS = test_Axis.$(OBJEXT)
test_Axis_OBJECTS = $(am_test_Axis_OBJECTS)
test_Axis_LDADD = $(LDADD)
test_Axis_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_BasisRule_OBJECTS = test_BasisRule.$(OBJEXT)
test_BasisRule_OBJECTS = $(am_test_BasisRule_OBJECTS)
test_BasisRule_LDADD = $(LDADD)
test_BasisRule_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Complex2Product_OBJECTS = test_Complex2Product.$(OBJEXT)
test_Complex2Product_OBJECTS = $(am_test_Complex2Product_OBJECTS)
test_Complex2Product_LDADD = $(LDADD)
test_Complex2Product_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_ComplexCorrelation_OBJECTS =  \
	test_ComplexCorrelation.$(OBJEXT)
test_ComplexCorrelation_OBJECTS =  \
	$(am_test_ComplexCorrelation_OBJECTS)
test_ComplexCorrelation_LDADD = $(LDADD)
test_ComplexCorrelation_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Composite_OBJECTS = test_Composite.$(OBJEXT)
test_Composite_OBJECTS = $(am_test_Composite_OBJECTS)
test_Composite_LDADD = $(LDADD)
test_Composite_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_CrossCoherency_OBJECTS = test_CrossCoherency.$(OBJEXT)
test_CrossCoherency_OBJECTS = $(am_test_CrossCoherency_OBJECTS)
test_CrossCoherency_LDADD = $(LDADD)
test_CrossCoherency_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_CyclicParameter_OBJECTS = test_CyclicParameter.$(OBJEXT)
test_CyclicParameter_OBJECTS = $(am_test_CyclicParameter_OBJECTS)
test_CyclicParameter_LDADD = $(LDADD)
test_CyclicParameter_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Function_load_OBJECTS = test_Function_load.$(OBJEXT)
test_Function_load_OBJECTS = $(am_test_Function_load_OBJECTS)
test_Function_load_LDADD = $(LDADD)
test_Function_load_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Invariant_OBJECTS = test_Invariant.$(OBJEXT)
test_Invariant_OBJECTS = $(am_test_Invariant_OBJECTS)
test_Invariant_LDADD = $(LDADD)
test_Invariant_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_JonesMueller_OBJECTS = test_JonesMueller.$(OBJEXT)
test_JonesMueller_OBJECTS = $(am_test_JonesMueller_OBJECTS)
test_JonesMueller_LDADD = $(LDADD)
test_JonesMueller_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Polar_OBJECTS = test_Polar.$(OBJEXT)
test_Polar_OBJECTS = $(am_test_Polar_OBJECTS)
test_Polar_LDADD = $(LDADD)
test_Polar_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Projection_OBJECTS = test_Projection.$(OBJEXT)
test_Projection_OBJECTS = $(am_test_Projection_OBJECTS)
test_Projection_LDADD = $(LDADD)
test_Projection_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Rotation_OBJECTS = test_Rotation.$(OBJEXT)
test_Rotation_OBJECTS = $(am_test_Rotation_OBJECTS)
test_Rotation_LDADD = $(LDADD)
test_Rotation_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Scalar_OBJECTS = test_Scalar.$(OBJEXT)
test_Scalar_OBJECTS = $(am_test_Scalar_OBJECTS)
test_Scalar_LDADD = $(LDADD)
test_Scalar_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Spinor_OBJECTS = test_Spinor.$(OBJEXT)
test_Spinor_OBJECTS = $(am_test_Spinor_OBJECTS)
test_Spinor_LDADD = $(LDADD)
test_Spinor_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_StokesCovariance_OBJECTS = test_StokesCovariance.$(OBJEXT)
test_StokesCovariance_OBJECTS = $(am_test_StokesCovariance_OBJECTS)
test_StokesCovariance_LDADD = $(LDADD)
test_StokesCovariance_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_StokesError_OBJECTS = test_StokesError.$(OBJEXT)
test_StokesError_OBJECTS = $(am_test_StokesError_OBJECTS)
test_StokesError_LDADD = $(LDADD)
test_StokesError_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_UnitTangent_OBJECTS = test_UnitTangent.$(OBJEXT)
test_UnitTangent_OBJECTS = $(am_test_UnitTangent_OBJECTS)
test_UnitTangent_LDADD = $(LDADD)
test_UnitTangent_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Univariate_OBJECTS = test_Univariate.$(OBJEXT)
test_Univariate_OBJECTS = $(am_test_Univariate_OBJECTS)
test_Univariate_LDADD = $(LDADD)
test_Univariate_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_Vectorize_OBJECTS = test_Vectorize.$(OBJEXT)
test_Vectorize_OBJECTS = $(am_test_Vectorize_OBJECTS)
test_Vectorize_LDADD = $(LDADD)
test_Vectorize_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_copy_OBJECTS = test_copy.$(OBJEXT)
test_copy_OBJECTS = $(am_test_copy_OBJECTS)
test_copy_LDADD = $(LDADD)
test_copy_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
am_test_get_imap_OBJECTS = test_get_imap.$(OBJEXT)
test_get_imap_OBJECTS = $(am_test_get_imap_OBJECTS)
test_get_imap_LDADD = $(LDADD)
test_get_imap_DEPENDENCIES = libMEAL.la \
	$(top_builddir)/Util/units/libunits.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_@AM_V@)
am__v_F77_ = $(am__v_F77_@AM_DEFAULT_V@)
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_@AM_V@)
am__v_F77LD_ = $(am__v_F77LD_@AM_DEFAULT_V@)
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libMEAL_la_SOURCES) $(test_Axis_SOURCES) \
	$(test_BasisRule_SOURCES) $(test_Complex2Product_SOURCES) \
	$(test_ComplexCorrelation_SOURCES) $(test_Composite_SOURCES) \
	$(test_CrossCoherency_SOURCES) $(test_CyclicParameter_SOURCES) \
	$(test_Function_load_SOURCES) $(test_Invariant_SOURCES) \
	$(test_JonesMueller_SOURCES) $(test_Polar_SOURCES) \
	$(test_Projection_SOURCES) $(test_Rotation_SOURCES) \
	$(test_Scalar_SOURCES) $(test_Spinor_SOURCES) \
	$(test_StokesCovariance_SOURCES) $(test_StokesError_SOURCES) \
	$(test_UnitTangent_SOURCES) $(test_Univariate_SOURCES) \
	$(test_Vectorize_SOURCES) $(test_copy_SOURCES) \
	$(test_get_imap_SOURCES)
DIST_SOURCES = $(libMEAL_la_SOURCES) $(test_Axis_SOURCES) \
	$(test_BasisRule_SOURCES) $(test_Complex2Product_SOURCES) \
	$(test_ComplexCorrelation_SOURCES) $(test_Composite_SOURCES) \
	$(test_CrossCoherency_SOURCES) $(test_CyclicParameter_SOURCES) \
	$(test_Function_load_SOURCES) $(test_Invariant_SOURCES) \
	$(test_JonesMueller_SOURCES) $(test_Polar_SOURCES) \
	$(test_Projection_SOURCES) $(test_Rotation_SOURCES) \
	$(test_Scalar_SOURCES) $(test_Spinor_SOURCES) \
	$(test_StokesCovariance_SOURCES) $(test_StokesError_SOURCES) \
	$(test_UnitTangent_SOURCES) $(test_Univariate_SOURCES) \
	$(test_Vectorize_SOURCES) $(test_copy_SOURCES) \
	$(test_get_imap_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(includedir)"
HEADERS = $(nobase_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Makefile.include \
	$(top_srcdir)/config/depcomp $(top_srcdir)/config/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFITSIO_CFLAGS = @CFITSIO_CFLAGS@
CFITSIO_LIBS = @CFITSIO_LIBS@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CULA_CFLAGS = @CULA_CFLAGS@
CULA_LIBS = @CULA_LIBS@
CURL = @CURL@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FFTW_CFLAGS = @FFTW_CFLAGS@
FFTW_LIBS = @FFTW_LIBS@
FFT_CFLAGS = @FFT_CFLAGS@
FFT_LIBS = @FFT_LIBS@
FGREP = @FGREP@
FLIBS = @FLIBS@
GREP = @GREP@
GSL_CFLAGS = @GSL_CFLAGS@
GSL_CONFIG = @GSL_CONFIG@
GSL_LIBS = @GSL_LIBS@
HEALPIX_CFLAGS = @HEALPIX_CFLAGS@
HEALPIX_LIBS = @HEALPIX_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
IPP_CFLAGS = @IPP_CFLAGS@
IPP_LIBS = @IPP_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOGIN_ARCH = @LOGIN_ARCH@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MKL_CFLAGS = @MKL_CFLAGS@
MKL_LIBS = @MKL_LIBS@
MPI_CFLAGS = @MPI_CFLAGS@
MPI_LIBS = @MPI_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENSSL_LIBS = @OPENSSL_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGES = @PACKAGES@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PGPLOT_CFLAGS = @PGPLOT_CFLAGS@
PGPLOT_DIR = @PGPLOT_DIR@
PGPLOT_LIBS = @PGPLOT_LIBS@
PSRCHIVE_HTTP = @PSRCHIVE_HTTP@
PSRCHIVE_INSTALL = @PSRCHIVE_INSTALL@
PSRHOME = @PSRHOME@
PSRXML_CFLAGS = @PSRXML_CFLAGS@
PSRXML_LIBS = @PSRXML_LIBS@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PUMA_CFLAGS = @PUMA_CFLAGS@
PUMA_LIBS = @PUMA_LIBS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION = @PYTHON_VERSION@
QTDRIV_CFLAGS = @QTDRIV_CFLAGS@
QTDRIV_LIBS = @QTDRIV_LIBS@
QT_CXXFLAGS = @QT_CXXFLAGS@
QT_DIR = @QT_DIR@
QT_LIBS = @QT_LIBS@
QT_MOC = @QT_MOC@
QT_UIC = @QT_UIC@
RANLIB = @RANLIB@
READLINE_CFLAGS = @READLINE_CFLAGS@
READLINE_LIBS = @READLINE_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOCKET_LIBS = @SOCKET_LIBS@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIG_PYTHON_CPPFLAGS = @SWIG_PYTHON_CPPFLAGS@
SWIG_PYTHON_OPT = @SWIG_PYTHON_OPT@
TEMPO2_CFLAGS = @TEMPO2_CFLAGS@
TEMPO2_LIBS = @TEMPO2_LIBS@
VERSION = @VERSION@
WGET = @WGET@
XMKMF = @XMKMF@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
acx_pthread_config = @acx_pthread_config@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
download = @download@
dvidir = @dvidir@
enable_shared = @enable_shared@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LTLIBRARIES = libMEAL.la
nobase_include_HEADERS = \
        MEAL/Agent.h \
        MEAL/Argument.h \
        MEAL/ArgumentPolicyAdapter.h \
        MEAL/ArgumentPolicy.h \
        MEAL/Axis.h \
	MEAL/BasisRule.h \
        MEAL/BinaryRule.h \
        MEAL/BinaryScalar.h \
        MEAL/Boost.h \
	MEAL/Boost1.h \
	MEAL/BoostUnion.h \
        MEAL/Cached.h \
        MEAL/CalculatePolicy.h \
	MEAL/Cast.h \
        MEAL/ChainRule.h \
        MEAL/Coherency.h \
        MEAL/Complex2Constant.h \
	MEAL/Complex.h \
	MEAL/ComplexCartesian.h \
	MEAL/ComplexCorrelation.h \
	MEAL/ComplexRVM.h \
        MEAL/Complex2.h \
        MEAL/Complex2Math.h \
	MEAL/Complex4.h \
        MEAL/Composite.h \
        MEAL/CongruenceTransformation.h \
        MEAL/Constant.h \
	MEAL/Convert.h \
	MEAL/CrossCoherency.h \
        MEAL/CyclicParameter.h \
	MEAL/Depolarizer.h \
	MEAL/Evaluable.h \
        MEAL/EvaluationPolicy.h \
	MEAL/EvaluationTracer.h \
        MEAL/ForwardChanged.h \
        MEAL/ForwardResult.h \
        MEAL/Function.h \
	MEAL/FunctionInterface.h \
        MEAL/FunctionPolicy.h \
        MEAL/Gain.h \
        MEAL/Gaussian.h \
        MEAL/GaussJordan.h \
	MEAL/GimbalLockMonitor.h \
        MEAL/GroupRule.h \
        MEAL/Invariant.h \
        MEAL/InverseRule.h \
	MEAL/JonesCloude.h \
	MEAL/JonesMueller.h \
	MEAL/JonesSpinor.h \
	MEAL/LeastSquares.h \
        MEAL/LevenbergMarquardt.h \
        MEAL/Mean.h \
	MEAL/ModeCoherency.h \
	MEAL/MuellerTransformation.h \
        MEAL/NegationRule.h \
        MEAL/NoParameters.h \
        MEAL/NormalizeStokes.h \
        MEAL/NotCached.h \
	MEAL/Null.h \
        MEAL/OneParameter.h \
	MEAL/OrthogonalModes.h \
        MEAL/ParameterPolicy.h \
	MEAL/ParameterTracer.h \
        MEAL/Parameters.h \
        MEAL/parse.h \
        MEAL/Phase.h \
	MEAL/PhaseGradients.h \
        MEAL/PhysicalCoherency.h \
        MEAL/Polar.h \
        MEAL/Polynomial.h \
        MEAL/PositionAngles.h \
        MEAL/PowerLaw.h \
	MEAL/ProductRule.h \
	MEAL/ProjectGradient.h \
	MEAL/Projection.h \
	MEAL/RandomPolar.h \
	MEAL/Real4.h \
        MEAL/RotatingVectorModel.h \
        MEAL/Rotation.h \
	MEAL/Rotation1.h \
        MEAL/RuleMath.h \
        MEAL/Scalar.h \
        MEAL/ScalarAbsolute.h \
        MEAL/ScalarArgument.h \
        MEAL/ScalarBesselI0.h \
        MEAL/ScalarConstant.h \
        MEAL/ScalarCosine.h \
	MEAL/ScalarErrorFunction.h \
        MEAL/ScalarExponential.h \
        MEAL/ScalarHypCosine.h \
        MEAL/ScalarHypSine.h \
        MEAL/ScalarHypTangent.h \
        MEAL/ScalarInverseHypTangent.h \
	MEAL/ScalarInverseTangent.h \
        MEAL/ScalarInverseTangent2.h \
        MEAL/ScalarLogarithm.h \
	MEAL/ScalarLogistic.h \
        MEAL/ScalarMath.h \
        MEAL/ScalarParameter.h \
        MEAL/ScalarPower.h \
        MEAL/ScalarRoot.h \
        MEAL/ScalarSine.h \
        MEAL/ScalarTangent.h \
	MEAL/ScalarVector.h \
        MEAL/ScaledVonMisesDeriv.h \
        MEAL/ScaledVonMises.h \
	MEAL/SingularCoherency.h \
	MEAL/Spinor.h \
	MEAL/SpinorJones.h \
	MEAL/Steps.h \
	MEAL/StokesCovariance.h \
	MEAL/StokesError.h \
        MEAL/SumRule.h \
        MEAL/Tracer.h \
	MEAL/Transformation.h \
	MEAL/UnaryConvert.h \
        MEAL/UnaryRule.h \
        MEAL/UnaryScalar.h \
	MEAL/Union.h \
	MEAL/UnitTangent.h \
        MEAL/Univariate.h \
        MEAL/UnivariatePolicy.h \
	MEAL/Value.h \
	MEAL/Vectorize.h \
        MEAL/VectorRule.h \
        MEAL/VelocityModel.h \
        MEAL/VonMises.h \
	MEAL/Wrap.h

libMEAL_la_SOURCES = \
        Argument.C \
        ArgumentPolicy.C \
	besrat.f \
	vkappa.f \
        BinaryScalar.C \
        Boost.C \
	Boost1.C \
	BoostUnion.C \
        Coherency.C \
	Complex.C \
	ComplexCartesian.C \
	ComplexCorrelation.C \
	ComplexRVM.C \
        Complex2.C \
        Complex2Constant.C \
        Complex2Math.C \
	Complex4.C \
        Composite.C \
        CongruenceTransformation.C \
	CrossCoherency.C \
        CyclicParameter.C \
	Depolarizer.C \
        ForwardChanged.C \
        Function.C \
        Function_factory.C \
        Function_load.C \
        Function_parse.C \
        Function_print.C \
	FunctionInterface.C \
	FunctionPolicy.C \
        Gaussian.C \
	GimbalLockMonitor.C \
        Invariant.C \
	JonesCloude.C \
	JonesMueller.C \
	JonesSpinor.C \
	LeastSquares.C \
	ModeCoherency.C \
	MuellerTransformation.C \
        NormalizeStokes.C \
	Null.C \
        OneParameter.C \
	OrthogonalModes.C \
        ParameterPolicy.C \
	ParameterTracer.C \
        Parameters.C \
	PhaseGradients.C \
        PhysicalCoherency.C \
        Polar.C \
        Polynomial.C \
        PositionAngles.C \
        PowerLaw.C \
        Projection.C \
	RandomPolar.C \
	Real4.C \
        RotatingVectorModel.C \
        Rotation.C \
	Rotation1.C \
        Scalar.C \
        ScalarAbsolute.C \
        ScalarArgument.C \
        ScalarConstant.C \
        ScalarCosine.C \
	ScalarErrorFunction.C \
        ScalarExponential.C \
        ScalarHypCosine.C \
        ScalarHypSine.C \
        ScalarHypTangent.C \
        ScalarInverseHypTangent.C \
        ScalarInverseTangent.C \
        ScalarInverseTangent2.C \
        ScalarLogarithm.C \
	ScalarLogistic.C \
        ScalarMath.C \
        ScalarParameter.C \
        ScalarPower.C \
        ScalarRoot.C \
        ScalarSine.C \
        ScalarTangent.C \
	ScalarVector.C \
        ScaledVonMises.C \
        ScaledVonMisesDeriv.C \
	SingularCoherency.C \
	Spinor.C \
	SpinorJones.C \
	Steps.C \
	StokesCovariance.C \
	StokesError.C \
        Tracer.C \
        UnaryScalar.C \
	Union.C \
	UnitTangent.C \
        UnivariatePolicy.C \
        VelocityModel.C 

test_copy_SOURCES = test_copy.C
test_Axis_SOURCES = test_Axis.C
test_Projection_SOURCES = test_Projection.C
test_Composite_SOURCES = test_Composite.C
test_get_imap_SOURCES = test_get_imap.C
test_BasisRule_SOURCES = test_BasisRule.C
test_Scalar_SOURCES = test_Scalar.C
test_Complex2Product_SOURCES = test_Complex2Product.C
test_Polar_SOURCES = test_Polar.C
test_Rotation_SOURCES = test_Rotation.C
test_CyclicParameter_SOURCES = test_CyclicParameter.C
test_Univariate_SOURCES = test_Univariate.C
test_Invariant_SOURCES = test_Invariant.C
test_StokesError_SOURCES = test_StokesError.C 
test_StokesCovariance_SOURCES = test_StokesCovariance.C 
test_Function_load_SOURCES = test_Function_load.C
test_Vectorize_SOURCES = test_Vectorize.C
test_UnitTangent_SOURCES = test_UnitTangent.C
test_ComplexCorrelation_SOURCES = test_ComplexCorrelation.C
test_Spinor_SOURCES = test_Spinor.C
test_CrossCoherency_SOURCES = test_CrossCoherency.C
test_JonesMueller_SOURCES = test_JonesMueller.C

#############################################################################
#
LDADD = libMEAL.la $(top_builddir)/Util/units/libunits.la
local_includedir = $(top_builddir)/local_include
LOCAL_INCLUDE = $(addprefix $(local_includedir)/, $(HEADERS))
CLEANFILES = $(LOCAL_INCLUDE) $(MOC_SOURCES) $(BUILT_SOURCES)
AM_CPPFLAGS = -I$(local_includedir) $(INCLUDE_CPPFLAGS)
AM_LDFLAGS = $(INCLUDE_LDFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .C .f .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign More/MEAL/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign More/MEAL/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/config/Makefile.include $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libMEAL.la: $(libMEAL_la_OBJECTS) $(libMEAL_la_DEPENDENCIES) $(EXTRA_libMEAL_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libMEAL_la_OBJECTS) $(libMEAL_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

test_Axis$(EXEEXT): $(test_Axis_OBJECTS) $(test_Axis_DEPENDENCIES) $(EXTRA_test_Axis_DEPENDENCIES) 
	@rm -f test_Axis$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Axis_OBJECTS) $(test_Axis_LDADD) $(LIBS)

test_BasisRule$(EXEEXT): $(test_BasisRule_OBJECTS) $(test_BasisRule_DEPENDENCIES) $(EXTRA_test_BasisRule_DEPENDENCIES) 
	@rm -f test_BasisRule$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_BasisRule_OBJECTS) $(test_BasisRule_LDADD) $(LIBS)

test_Complex2Product$(EXEEXT): $(test_Complex2Product_OBJECTS) $(test_Complex2Product_DEPENDENCIES) $(EXTRA_test_Complex2Product_DEPENDENCIES) 
	@rm -f test_Complex2Product$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Complex2Product_OBJECTS) $(test_Complex2Product_LDADD) $(LIBS)

test_ComplexCorrelation$(EXEEXT): $(test_ComplexCorrelation_OBJECTS) $(test_ComplexCorrelation_DEPENDENCIES) $(EXTRA_test_ComplexCorrelation_DEPENDENCIES) 
	@rm -f test_ComplexCorrelation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ComplexCorrelation_OBJECTS) $(test_ComplexCorrelation_LDADD) $(LIBS)

test_Composite$(EXEEXT): $(test_Composite_OBJECTS) $(test_Composite_DEPENDENCIES) $(EXTRA_test_Composite_DEPENDENCIES) 
	@rm -f test_Composite$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Composite_OBJECTS) $(test_Composite_LDADD) $(LIBS)

test_CrossCoherency$(EXEEXT): $(test_CrossCoherency_OBJECTS) $(test_CrossCoherency_DEPENDENCIES) $(EXTRA_test_CrossCoherency_DEPENDENCIES) 
	@rm -f test_CrossCoherency$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_CrossCoherency_OBJECTS) $(test_CrossCoherency_LDADD) $(LIBS)

test_CyclicParameter$(EXEEXT): $(test_CyclicParameter_OBJECTS) $(test_CyclicParameter_DEPENDENCIES) $(EXTRA_test_CyclicParameter_DEPENDENCIES) 
	@rm -f test_CyclicParameter$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_CyclicParameter_OBJECTS) $(test_CyclicParameter_LDADD) $(LIBS)

test_Function_load$(EXEEXT): $(test_Function_load_OBJECTS) $(test_Function_load_DEPENDENCIES) $(EXTRA_test_Function_load_DEPENDENCIES) 
	@rm -f test_Function_load$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Function_load_OBJECTS) $(test_Function_load_LDADD) $(LIBS)

test_Invariant$(EXEEXT): $(test_Invariant_OBJECTS) $(test_Invariant_DEPENDENCIES) $(EXTRA_test_Invariant_DEPENDENCIES) 
	@rm -f test_Invariant$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Invariant_OBJECTS) $(test_Invariant_LDADD) $(LIBS)

test_JonesMueller$(EXEEXT): $(test_JonesMueller_OBJECTS) $(test_JonesMueller_DEPENDENCIES) $(EXTRA_test_JonesMueller_DEPENDENCIES) 
	@rm -f test_JonesMueller$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_JonesMueller_OBJECTS) $(test_JonesMueller_LDADD) $(LIBS)

test_Polar$(EXEEXT): $(test_Polar_OBJECTS) $(test_Polar_DEPENDENCIES) $(EXTRA_test_Polar_DEPENDENCIES) 
	@rm -f test_Polar$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Polar_OBJECTS) $(test_Polar_LDADD) $(LIBS)

test_Projection$(EXEEXT): $(test_Projection_OBJECTS) $(test_Projection_DEPENDENCIES) $(EXTRA_test_Projection_DEPENDENCIES) 
	@rm -f test_Projection$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Projection_OBJECTS) $(test_Projection_LDADD) $(LIBS)

test_Rotation$(EXEEXT): $(test_Rotation_OBJECTS) $(test_Rotation_DEPENDENCIES) $(EXTRA_test_Rotation_DEPENDENCIES) 
	@rm -f test_Rotation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Rotation_OBJECTS) $(test_Rotation_LDADD) $(LIBS)

test_Scalar$(EXEEXT): $(test_Scalar_OBJECTS) $(test_Scalar_DEPENDENCIES) $(EXTRA_test_Scalar_DEPENDENCIES) 
	@rm -f test_Scalar$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Scalar_OBJECTS) $(test_Scalar_LDADD) $(LIBS)

test_Spinor$(EXEEXT): $(test_Spinor_OBJECTS) $(test_Spinor_DEPENDENCIES) $(EXTRA_test_Spinor_DEPENDENCIES) 
	@rm -f test_Spinor$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Spinor_OBJECTS) $(test_Spinor_LDADD) $(LIBS)

test_StokesCovariance$(EXEEXT): $(test_StokesCovariance_OBJECTS) $(test_StokesCovariance_DEPENDENCIES) $(EXTRA_test_StokesCovariance_DEPENDENCIES) 
	@rm -f test_StokesCovariance$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_StokesCovariance_OBJECTS) $(test_StokesCovariance_LDADD) $(LIBS)

test_StokesError$(EXEEXT): $(test_StokesError_OBJECTS) $(test_StokesError_DEPENDENCIES) $(EXTRA_test_StokesError_DEPENDENCIES) 
	@rm -f test_StokesError$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_StokesError_OBJECTS) $(test_StokesError_LDADD) $(LIBS)

test_UnitTangent$(EXEEXT): $(test_UnitTangent_OBJECTS) $(test_UnitTangent_DEPENDENCIES) $(EXTRA_test_UnitTangent_DEPENDENCIES) 
	@rm -f test_UnitTangent$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_UnitTangent_OBJECTS) $(test_UnitTangent_LDADD) $(LIBS)

test_Univariate$(EXEEXT): $(test_Univariate_OBJECTS) $(test_Univariate_DEPENDENCIES) $(EXTRA_test_Univariate_DEPENDENCIES) 
	@rm -f test_Univariate$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Univariate_OBJECTS) $(test_Univariate_LDADD) $(LIBS)

test_Vectorize$(EXEEXT): $(test_Vectorize_OBJECTS) $(test_Vectorize_DEPENDENCIES) $(EXTRA_test_Vectorize_DEPENDENCIES) 
	@rm -f test_Vectorize$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Vectorize_OBJECTS) $(test_Vectorize_LDADD) $(LIBS)

test_copy$(EXEEXT): $(test_copy_OBJECTS) $(test_copy_DEPENDENCIES) $(EXTRA_test_copy_DEPENDENCIES) 
	@rm -f test_copy$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_copy_OBJECTS) $(test_copy_LDADD) $(LIBS)

test_get_imap$(EXEEXT): $(test_get_imap_OBJECTS) $(test_get_imap_DEPENDENCIES) $(EXTRA_test_get_imap_DEPENDENCIES) 
	@rm -f test_get_imap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_get_imap_OBJECTS) $(test_get_imap_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Argument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ArgumentPolicy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BinaryScalar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Boost.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Boost1.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BoostUnion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Coherency.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Complex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Complex2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Complex2Constant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Complex2Math.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Complex4.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ComplexCartesian.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ComplexCorrelation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ComplexRVM.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Composite.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CongruenceTransformation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CrossCoherency.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CyclicParameter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Depolarizer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ForwardChanged.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Function.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FunctionInterface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FunctionPolicy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Function_factory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Function_load.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Function_parse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Function_print.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Gaussian.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GimbalLockMonitor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Invariant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/JonesCloude.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/JonesMueller.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/JonesSpinor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeastSquares.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ModeCoherency.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MuellerTransformation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NormalizeStokes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Null.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OneParameter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OrthogonalModes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParameterPolicy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParameterTracer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Parameters.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhaseGradients.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhysicalCoherency.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Polar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PositionAngles.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PowerLaw.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Projection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RandomPolar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Real4.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RotatingVectorModel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rotation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rotation1.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Scalar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarAbsolute.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarArgument.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarConstant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarCosine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarErrorFunction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarExponential.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarHypCosine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarHypSine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarHypTangent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarInverseHypTangent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarInverseTangent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarInverseTangent2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarLogarithm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarLogistic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarMath.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarParameter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarPower.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarRoot.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarSine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarTangent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarVector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScaledVonMises.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScaledVonMisesDeriv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SingularCoherency.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Spinor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpinorJones.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Steps.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StokesCovariance.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StokesError.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Tracer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UnaryScalar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Union.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UnitTangent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UnivariatePolicy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VelocityModel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Axis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_BasisRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Complex2Product.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ComplexCorrelation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Composite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_CrossCoherency.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_CyclicParameter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Function_load.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Invariant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_JonesMueller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Polar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Projection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Rotation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Scalar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Spinor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_StokesCovariance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_StokesError.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_UnitTangent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Univariate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Vectorize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_copy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_get_imap.Po@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(AM_V_F77)$(LTF77COMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_copy.log: test_copy$(EXEEXT)
	@p='test_copy$(EXEEXT)'; \
	b='test_copy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Axis.log: test_Axis$(EXEEXT)
	@p='test_Axis$(EXEEXT)'; \
	b='test_Axis'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Projection.log: test_Projection$(EXEEXT)
	@p='test_Projection$(EXEEXT)'; \
	b='test_Projection'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Composite.log: test_Composite$(EXEEXT)
	@p='test_Composite$(EXEEXT)'; \
	b='test_Composite'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_get_imap.log: test_get_imap$(EXEEXT)
	@p='test_get_imap$(EXEEXT)'; \
	b='test_get_imap'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_BasisRule.log: test_BasisRule$(EXEEXT)
	@p='test_BasisRule$(EXEEXT)'; \
	b='test_BasisRule'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Scalar.log: test_Scalar$(EXEEXT)
	@p='test_Scalar$(EXEEXT)'; \
	b='test_Scalar'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Complex2Product.log: test_Complex2Product$(EXEEXT)
	@p='test_Complex2Product$(EXEEXT)'; \
	b='test_Complex2Product'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Polar.log: test_Polar$(EXEEXT)
	@p='test_Polar$(EXEEXT)'; \
	b='test_Polar'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Rotation.log: test_Rotation$(EXEEXT)
	@p='test_Rotation$(EXEEXT)'; \
	b='test_Rotation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Invariant.log: test_Invariant$(EXEEXT)
	@p='test_Invariant$(EXEEXT)'; \
	b='test_Invariant'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_CyclicParameter.log: test_CyclicParameter$(EXEEXT)
	@p='test_CyclicParameter$(EXEEXT)'; \
	b='test_CyclicParameter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Univariate.log: test_Univariate$(EXEEXT)
	@p='test_Univariate$(EXEEXT)'; \
	b='test_Univariate'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_StokesError.log: test_StokesError$(EXEEXT)
	@p='test_StokesError$(EXEEXT)'; \
	b='test_StokesError'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_StokesCovariance.log: test_StokesCovariance$(EXEEXT)
	@p='test_StokesCovariance$(EXEEXT)'; \
	b='test_StokesCovariance'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Vectorize.log: test_Vectorize$(EXEEXT)
	@p='test_Vectorize$(EXEEXT)'; \
	b='test_Vectorize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_UnitTangent.log: test_UnitTangent$(EXEEXT)
	@p='test_UnitTangent$(EXEEXT)'; \
	b='test_UnitTangent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ComplexCorrelation.log: test_ComplexCorrelation$(EXEEXT)
	@p='test_ComplexCorrelation$(EXEEXT)'; \
	b='test_ComplexCorrelation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Spinor.log: test_Spinor$(EXEEXT)
	@p='test_Spinor$(EXEEXT)'; \
	b='test_Spinor'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_CrossCoherency.log: test_CrossCoherency$(EXEEXT)
	@p='test_CrossCoherency$(EXEEXT)'; \
	b='test_CrossCoherency'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_JonesMueller.log: test_JonesMueller$(EXEEXT)
	@p='test_JonesMueller$(EXEEXT)'; \
	b='test_JonesMueller'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-nobase_includeHEADERS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-nobase_includeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-nobase_includeHEADERS

.PRECIOUS: Makefile


##############################################################################
#
# Rule to generate MEAL.pdf
#

# convert Postscript to Abobe Acrobat Portable Document Format
%.pdf: %.ps
	ps2pdf $<

# convert dvi file format to Postscript using Adobe safe ligatures
%.ps: %.dvi
	dvips -Ppdf -G0 -o $@ $<

%.dvi: %.tex $(FIGS) $(TEXS)
	latex $*
	latex $* 

doc: MEAL.pdf

all-local: $(LOCAL_INCLUDE)

$(LOCAL_INCLUDE) : $(local_includedir)/% : %
	@$(SHELL) $(top_srcdir)/config/install-intermediate $< $@

###########################################################################
#
# Rules for making PDF from LaTeX
#
###########################################################################

#
# convert Postscript to Abobe Acrobat Portable Document Format
#
%.pdf: %.ps
	ps2pdf $<

#
# convert dvi file format to Postscript using Adobe safe ligatures
#
%.ps: %.dvi
	dvips -Ppdf -G0 -o $@ $<

#
# generate dvi file from LaTeX input
#
%.dvi: $(srcdir)/%.tex
# Get new refs
	latex $<
# Generate tex for em
	bibtex $* ; date
# Tell latex about them
	latex $<
# Second pass to fix cross-references
	latex $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
